---
import BaseHead from '../../components/BaseHead.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import SunsetHeader from '@/components/layout/Header/SunsetHeader.component';
import SunsetFooter from '@/components/layout/Footer/SunsetFooter.component';
import PostsView, { PostType } from '@/components/posts/PostGrid.component';

const lorePosts= await getCollection(PostType.Lore, ({ data }) => {
  return data.draft !== true;
})

const lorePostsProcessed = lorePosts.map((item) => {
	return {
		...item,
		searchData: `${item.data.title.toLowerCase()} ${item.data.description.toLowerCase()} ${item.data.tags?.map((tag) => tag.toLowerCase() + " ")} ${item.body.toLowerCase()}`
	}
});
/*
const gamePosts = await getCollection(PostType.Game, ({ data }) => {
  return data.draft !== true;
});
const announcementPosts = await getCollection(PostType.Announcement, ({ data }) => {
  return data.draft !== true;
});*/

//const [aye, useAye] = useState("")
/*.sort(
	(a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);*/
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<SunsetHeader client:only currentPage={Astro.url.pathname}/>
		<main>
			<PostsView  client:only
				lorePosts={lorePostsProcessed}
			/>
			


			<section>
				<ul>
					{/* 
						posts.map((post) => (
							<li>
								<FormattedDate date={post.data.pubDate} />
								<a href={`/blog/${post.slug}/`}>{post.data.title}</a>
							</li>
						))
					*/}
				</ul>
			</section>
		</main>
		<SunsetFooter />
	</body>
</html>
